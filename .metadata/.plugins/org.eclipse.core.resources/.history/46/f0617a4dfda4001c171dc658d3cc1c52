import files.ReUsableMethods;
import files.payload;
import io.restassured.path.json.JsonPath;

public class ComplexJson {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
		//Parsing the comples jSon, Mocking the response, and validating the below areas.
		/*1. Print No of courses returned by API

		2.Print Purchase Amount

		3. Print Title of the first course

		4. Print All course titles and their respective Prices

		5. Print no of copies sold by RPA Course

		6. Verify if Sum of all Course prices matches with Purchase Amount*/
		
		
		JsonPath js = new JsonPath(payload.coursePrice());
		//1. Print No of courses returned by API
		
		int courseCount = js.getInt("courses.size()");
		System.out.println(courseCount);
		
		//2.Print Purchase Amount
		
		int purchaseAmount =js.getInt("dashboard.purchaseAmount");
		System.out.println(purchaseAmount);
		
		//3. Print Title of the first course
		
	String firstCourseTitle	=js.getString("courses[0].title");
	System.out.println(firstCourseTitle);
	
	
	//4.Print All course titles and their respective Prices
	for(int i=0; i<courseCount; i++)
	{
	
	String courseTitle	=js.getString("courses["+i+"].title");
	String coursePrice	=js.getString("courses["+i+"].price");
	System.out.println("Title is "+courseTitle+" price is "+coursePrice);
	
	}
	//5. Print no of copies sold by RPA Course
	for(int i=0; i<courseCount; i++)
	{
		String title=js.getString("courses["+i+"].title");
		if(title.equalsIgnoreCase("RPA"))
		{
		 int copies=js.getInt("courses["+i+"].copies");
		 System.out.println("copies is "+copies);
		 
		 
		 
		}
	}
	
	//6. Verify if Sum of all Course prices matches with Purchase Amount
	
for(int i=0; i<courseCount; i++)
{
	int coursePrice	=js.getInt("courses["+i+"].price");
	 int copies=js.getInt("courses["+i+"].copies");
	 
	
}
	
	}

}
